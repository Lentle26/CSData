{"ast":null,"code":"var _jsxFileName = \"/home/lgentle/repos/CSCapstoneProject/react/cscapstone/src/components/SideMenu/LanguageSelect.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst languages = [\"English\", \"French\", \"German\", \"Spanish\", \"Japanese\", \"Portugese\"];\n\nfunction getStyles(language, languagename, theme) {\n  return {\n    fontWeight: languagename.indexOf(language) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function LanguageSelect(props) {\n  _s();\n\n  const theme = useTheme();\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    props.setLanguageName( // On autofill we get a stringified value.\n    typeof value === \"string\" ? value.split(\",\") : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 200\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"genre-select-label\",\n        children: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"genre-select-label\",\n        id: \"genre-select\",\n        multiple: true,\n        value: props.languageName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }, this),\n        MenuProps: MenuProps,\n        children: languages.map(language => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: language,\n          style: getStyles(language, props.languageName, theme),\n          children: language\n        }, language, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LanguageSelect, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = LanguageSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageSelect\");","map":{"version":3,"sources":["/home/lgentle/repos/CSCapstoneProject/react/cscapstone/src/components/SideMenu/LanguageSelect.js"],"names":["React","useTheme","OutlinedInput","InputLabel","MenuItem","FormControl","Select","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","languages","getStyles","language","languagename","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","LanguageSelect","props","handleChange","event","target","value","setLanguageName","split","m","languageName","map"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;AASA,MAAMC,SAAS,GAAG,CAChB,SADgB,EAEhB,QAFgB,EAGhB,QAHgB,EAIhB,SAJgB,EAKhB,UALgB,EAMhB,WANgB,CAAlB;;AASA,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,YAA7B,EAA2CC,KAA3C,EAAkD;AAChD,SAAO;AACLC,IAAAA,UAAU,EACRF,YAAY,CAACG,OAAb,CAAqBJ,QAArB,MAAmC,CAAC,CAApC,GACIE,KAAK,CAACG,UAAN,CAAiBC,iBADrB,GAEIJ,KAAK,CAACG,UAAN,CAAiBE;AAJlB,GAAP;AAMD;;AAED,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAMP,KAAK,GAAGjB,QAAQ,EAAtB;;AAEA,QAAMyB,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFF,KAFJ;AAGAF,IAAAA,KAAK,CAACK,eAAN,EACE;AACA,WAAOD,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACE,KAAN,CAAY,GAAZ,CAA5B,GAA+CF,KAFjD;AAID,GARD;;AAUA,sBACE;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAE;AAAEG,QAAAA,CAAC,EAAE,CAAL;AAAQnB,QAAAA,KAAK,EAAE;AAAf,OAAjB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,oBADV;AAEE,QAAA,EAAE,EAAC,cAFL;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,KAAK,EAAEY,KAAK,CAACQ,YAJf;AAKE,QAAA,QAAQ,EAAEP,YALZ;AAME,QAAA,KAAK,eAAE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,gBANT;AAOE,QAAA,SAAS,EAAEjB,SAPb;AAAA,kBASGK,SAAS,CAACoB,GAAV,CAAelB,QAAD,iBACb,QAAC,QAAD;AAEE,UAAA,KAAK,EAAEA,QAFT;AAGE,UAAA,KAAK,EAAED,SAAS,CAACC,QAAD,EAAWS,KAAK,CAACQ,YAAjB,EAA+Bf,KAA/B,CAHlB;AAAA,oBAKGF;AALH,WACOA,QADP;AAAA;AAAA;AAAA;AAAA,gBADD;AATH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAvCuBQ,c;UACRvB,Q;;;KADQuB,c","sourcesContent":["import * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst languages = [\n  \"English\",\n  \"French\",\n  \"German\",\n  \"Spanish\",\n  \"Japanese\",\n  \"Portugese\",\n];\n\nfunction getStyles(language, languagename, theme) {\n  return {\n    fontWeight:\n      languagename.indexOf(language) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function LanguageSelect(props) {\n  const theme = useTheme();\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    props.setLanguageName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 200 }}>\n        <InputLabel id=\"genre-select-label\">Language</InputLabel>\n        <Select\n          labelId=\"genre-select-label\"\n          id=\"genre-select\"\n          multiple\n          value={props.languageName}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Language\" />}\n          MenuProps={MenuProps}\n        >\n          {languages.map((language) => (\n            <MenuItem\n              key={language}\n              value={language}\n              style={getStyles(language, props.languageName, theme)}\n            >\n              {language}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}