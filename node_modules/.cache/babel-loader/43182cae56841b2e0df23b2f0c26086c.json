{"ast":null,"code":"var _jsxFileName = \"/home/lgentle/repos/CSCapstoneProject/react/cscapstone/src/components/MovieDetail/MovieDetail.js\";\n//import logo from \"./logo.svg\";\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Grid from \"@mui/material/Grid\";\nimport MoviePoster from \"./MoviePoster\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction createData(name, value) {\n  return {\n    name,\n    value\n  };\n}\n\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: \"center\"\n  };\n});\n_c = Item;\n\nfunction getLanguages(languages) {\n  let languagesText = \"\";\n\n  try {\n    for (var i = 0; i < languages.length - 1; i++) {\n      languagesText += languages[i].english_name + \", \";\n    }\n\n    if (languages.length != 0) {\n      languagesText += languages[languages.length - 1].english_name;\n    }\n  } catch {\n    return \"\";\n  }\n\n  return languagesText;\n}\n\nfunction getGenres(genres) {\n  let genresText = \"\";\n\n  try {\n    for (var i = 0; i < genres.length - 1; i++) {\n      genresText += genres[i].name + \", \";\n    }\n\n    if (genres.length != 0) {\n      genresText += genres[genres.length - 1].name;\n    }\n  } catch {\n    return \"\";\n  }\n\n  return genresText;\n}\n\nvar formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\" // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n});\nexport default class MovieDetail extends React.Component {\n  render() {\n    const rows = [createData(\"Tagline\", this.props.movie.tagline), createData(\"Genres\", getGenres(this.props.movie.genres)), createData(\"Budget\", this.props.movie.revenue ? formatter.format(this.props.movie.budget) : \"\"), createData(\"Popularity\", this.props.movie.popularity), createData(\"Revenue\", this.props.movie.revenue ? formatter.format(this.props.movie.revenue) : \"\"), createData(\"Release Date\", this.props.movie.release_date), createData(\"Language\", getLanguages(this.props.movie.spoken_languages)), createData(\"Status\", this.props.movie.status)];\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(12, 1fr)\",\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        gridColumn: \"span 4\",\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: [/*#__PURE__*/_jsxDEV(MoviePoster, {\n            movie: this.props.movie,\n            lists: this.props.lists,\n            id: this.props.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              maxHeight: 150,\n              overflow: \"auto\",\n              bgcolor: \"background.paper\"\n            },\n            children: this.props.streaming ? this.props.streaming.map(item => {\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: `https://image.tmdb.org/t/p/w500${item.logo_path}`,\n                    src: `https://image.tmdb.org/t/p/w500${item.logo_path}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `${item.provider_name}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this)]\n              }, item, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        gridColumn: \"span 8\",\n        sx: {\n          overflow: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                gutterBottom: true,\n                component: \"h5\",\n                children: this.props.movie.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  \"aria-label\": \"simple table\",\n                  children: /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                      sx: {\n                        \"&:last-child td, &:last-child th\": {\n                          border: 0\n                        }\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        component: \"th\",\n                        scope: \"row\",\n                        children: row.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: row.value\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 27\n                      }, this)]\n                    }, row.name, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                align: \"center\",\n                component: \"h4\",\n                children: \"Cast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), this.props.credit ? /*#__PURE__*/_jsxDEV(List, {\n                dense: true,\n                sx: {\n                  maxHeight: 250,\n                  overflow: \"auto\",\n                  bgcolor: \"background.paper\"\n                },\n                children: this.props.credit.cast.map(item => {\n                  return /*#__PURE__*/_jsxDEV(ListItem, {\n                    disablePadding: true,\n                    onClick: () => {\n                      window.location.href = \"https://www.themoviedb.org/person/\" + item.id;\n                    },\n                    children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                        children: /*#__PURE__*/_jsxDEV(Avatar, {\n                          alt: `https://image.tmdb.org/t/p/w500${item.profile_path}`,\n                          src: `https://image.tmdb.org/t/p/w500${item.profile_path}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 186,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: `${item.name} as ${item.character}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 27\n                    }, this)\n                  }, item, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                align: \"center\",\n                component: \"h4\",\n                children: \"Crew\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), this.props.credit ? /*#__PURE__*/_jsxDEV(List, {\n                dense: true,\n                sx: {\n                  maxHeight: 250,\n                  overflow: \"auto\",\n                  bgcolor: \"background.paper\"\n                },\n                children: this.props.credit.crew.map(item => {\n                  return /*#__PURE__*/_jsxDEV(ListItem, {\n                    disablePadding: true,\n                    onClick: () => {\n                      window.location.href = \"https://www.themoviedb.org/person/\" + item.id;\n                    },\n                    children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                        children: /*#__PURE__*/_jsxDEV(Avatar, {\n                          alt: `https://image.tmdb.org/t/p/w500${item.profile_path}`,\n                          src: `https://image.tmdb.org/t/p/w500${item.profile_path}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 228,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: `${item.name} as ${item.job}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 27\n                    }, this)\n                  }, item, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["/home/lgentle/repos/CSCapstoneProject/react/cscapstone/src/components/MovieDetail/MovieDetail.js"],"names":["React","Box","Typography","Paper","styled","Table","TableBody","TableCell","TableContainer","TableRow","List","ListItem","ListItemButton","ListItemText","ListItemAvatar","Avatar","Grid","MoviePoster","createData","name","value","Item","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","getLanguages","languages","languagesText","i","length","english_name","getGenres","genres","genresText","formatter","Intl","NumberFormat","style","currency","MovieDetail","Component","render","rows","props","movie","tagline","revenue","format","budget","popularity","release_date","spoken_languages","status","lists","id","maxHeight","overflow","bgcolor","streaming","map","item","logo_path","provider_name","overview","row","border","credit","cast","window","location","href","profile_path","character","crew","job"],"mappings":"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","sourcesContent":["//import logo from \"./logo.svg\";\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Grid from \"@mui/material/Grid\";\nimport MoviePoster from \"./MoviePoster\";\n\nfunction createData(name, value) {\n  return { name, value };\n}\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n}));\n\nfunction getLanguages(languages) {\n  let languagesText = \"\";\n  try {\n    for (var i = 0; i < languages.length - 1; i++) {\n      languagesText += languages[i].english_name + \", \";\n    }\n    if (languages.length != 0) {\n      languagesText += languages[languages.length - 1].english_name;\n    }\n  } catch {\n    return \"\";\n  }\n  return languagesText;\n}\n\nfunction getGenres(genres) {\n  let genresText = \"\";\n  try {\n    for (var i = 0; i < genres.length - 1; i++) {\n      genresText += genres[i].name + \", \";\n    }\n    if (genres.length != 0) {\n      genresText += genres[genres.length - 1].name;\n    }\n  } catch {\n    return \"\";\n  }\n  return genresText;\n}\n\nvar formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\nexport default class MovieDetail extends React.Component {\n  render() {\n    const rows = [\n      createData(\"Tagline\", this.props.movie.tagline),\n      createData(\"Genres\", getGenres(this.props.movie.genres)),\n      createData(\n        \"Budget\",\n        this.props.movie.revenue\n          ? formatter.format(this.props.movie.budget)\n          : \"\"\n      ),\n      createData(\"Popularity\", this.props.movie.popularity),\n      createData(\n        \"Revenue\",\n        this.props.movie.revenue\n          ? formatter.format(this.props.movie.revenue)\n          : \"\"\n      ),\n      createData(\"Release Date\", this.props.movie.release_date),\n      createData(\"Language\", getLanguages(this.props.movie.spoken_languages)),\n      createData(\"Status\", this.props.movie.status),\n    ];\n    return (\n      <Box display=\"grid\" gridTemplateColumns=\"repeat(12, 1fr)\" gap={1}>\n        <Box gridColumn=\"span 4\">\n          <Item>\n            <MoviePoster\n              movie={this.props.movie}\n              lists={this.props.lists}\n              id={this.props.id}\n            />\n            <List\n              sx={{\n                maxHeight: 150,\n                overflow: \"auto\",\n                bgcolor: \"background.paper\",\n              }}\n            >\n              {this.props.streaming ? (\n                this.props.streaming.map((item) => {\n                  return (\n                    <ListItem key={item}>\n                      <ListItemAvatar>\n                        <Avatar\n                          alt={`https://image.tmdb.org/t/p/w500${item.logo_path}`}\n                          src={`https://image.tmdb.org/t/p/w500${item.logo_path}`}\n                        />\n                      </ListItemAvatar>\n                      <ListItemText primary={`${item.provider_name}`} />\n                    </ListItem>\n                  );\n                })\n              ) : (\n                <></>\n              )}\n            </List>\n          </Item>\n        </Box>\n        <Box\n          gridColumn=\"span 8\"\n          sx={{\n            overflow: \"auto\",\n          }}\n        >\n          <Item>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <Typography variant=\"body2\" gutterBottom component=\"h5\">\n                  {this.props.movie.overview}\n                </Typography>\n\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"simple table\">\n                    <TableBody>\n                      {rows.map((row) => (\n                        <TableRow\n                          key={row.name}\n                          sx={{\n                            \"&:last-child td, &:last-child th\": { border: 0 },\n                          }}\n                        >\n                          <TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                          </TableCell>\n                          <TableCell align=\"right\">{row.value}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"h6\" align=\"center\" component=\"h4\">\n                  Cast\n                </Typography>\n                {this.props.credit ? (\n                  <List\n                    dense\n                    sx={{\n                      maxHeight: 250,\n                      overflow: \"auto\",\n                      bgcolor: \"background.paper\",\n                    }}\n                  >\n                    {this.props.credit.cast.map((item) => {\n                      return (\n                        <ListItem\n                          key={item}\n                          disablePadding\n                          onClick={() => {\n                            window.location.href =\n                              \"https://www.themoviedb.org/person/\" + item.id;\n                          }}\n                        >\n                          <ListItemButton>\n                            <ListItemAvatar>\n                              <Avatar\n                                alt={`https://image.tmdb.org/t/p/w500${item.profile_path}`}\n                                src={`https://image.tmdb.org/t/p/w500${item.profile_path}`}\n                              />\n                            </ListItemAvatar>\n                            <ListItemText\n                              primary={`${item.name} as ${item.character}`}\n                            />\n                          </ListItemButton>\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                ) : (\n                  <></>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"h6\" align=\"center\" component=\"h4\">\n                  Crew\n                </Typography>\n                {this.props.credit ? (\n                  <List\n                    dense\n                    sx={{\n                      maxHeight: 250,\n                      overflow: \"auto\",\n                      bgcolor: \"background.paper\",\n                    }}\n                  >\n                    {this.props.credit.crew.map((item) => {\n                      return (\n                        <ListItem\n                          key={item}\n                          disablePadding\n                          onClick={() => {\n                            window.location.href =\n                              \"https://www.themoviedb.org/person/\" + item.id;\n                          }}\n                        >\n                          <ListItemButton>\n                            <ListItemAvatar>\n                              <Avatar\n                                alt={`https://image.tmdb.org/t/p/w500${item.profile_path}`}\n                                src={`https://image.tmdb.org/t/p/w500${item.profile_path}`}\n                              />\n                            </ListItemAvatar>\n                            <ListItemText\n                              primary={`${item.name} as ${item.job}`}\n                            />\n                          </ListItemButton>\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                ) : (\n                  <></>\n                )}\n              </Grid>\n            </Grid>\n          </Item>\n        </Box>\n      </Box>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}