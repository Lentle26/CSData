{"ast":null,"code":"var _jsxFileName = \"/home/lgentle/repos/CSCapstoneProject/react/cscapstone/src/components/SideMenu/GenreSelect.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 150\n    }\n  }\n};\nconst genres = ['Action', 'Adventure', 'Animation', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', 'History', 'Horor', 'Music', 'Mystery', 'Romance', 'Science Fiction', 'TV Movie', 'Thriller', 'War', 'Western'];\n\nfunction getStyles(genre, genreName, theme) {\n  return {\n    fontWeight: genreName.indexOf(genre) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function GenreSelect() {\n  _s();\n\n  const theme = useTheme();\n  const [genreName, setGenreName] = React.useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setGenreName( // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          width: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          shrink: true,\n          htmlFor: \"select-multiple-native\",\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-multiple-name-label\",\n          id: \"demo-multiple-name\",\n          multiple: true,\n          native: true,\n          value: genreName,\n          onChange: handleChange,\n          input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            label: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 18\n          }, this),\n          MenuProps: MenuProps,\n          children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre,\n            style: getStyles(genre, genreName, theme),\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GenreSelect, \"K0Kv42S1F8tZwFKznyQwfjWtcNE=\", false, function () {\n  return [useTheme];\n});\n\n_c = GenreSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreSelect\");","map":{"version":3,"sources":["/home/lgentle/repos/CSCapstoneProject/react/cscapstone/src/components/SideMenu/GenreSelect.js"],"names":["React","useTheme","OutlinedInput","InputLabel","FormControl","Select","Box","Grid","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","genres","getStyles","genre","genreName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","GenreSelect","setGenreName","useState","handleChange","event","target","value","split","m","map"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 150,\n    },\n  },\n};\n\nconst genres = [\n  'Action',\n  'Adventure',\n  'Animation',\n  'Comedy',\n  'Crime',\n  'Documentary',\n  'Drama',\n  'Family',\n  'Fantasy',\n  'History',\n  'Horor',\n  'Music',\n  'Mystery',\n  'Romance',\n  'Science Fiction',\n  'TV Movie',\n  'Thriller',\n  'War',\n  'Western',\n];\n\nfunction getStyles(genre, genreName, theme) {\n  return {\n    fontWeight:\n    genreName.indexOf(genre) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function GenreSelect() {\n  const theme = useTheme();\n  const [genreName, setGenreName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setGenreName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n    \n    <Grid container justifyContent=\"center\" spacing={2}>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel shrink htmlFor=\"select-multiple-native\">\n          Genre\n        </InputLabel>\n        <Select\n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          multiple\n          native\n          value={genreName}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Genre\" />}\n          MenuProps={MenuProps}\n        >\n          {genres.map((genre) => (\n            <option\n              key={genre}\n              value={genre}\n              style={getStyles(genre, genreName, theme)}\n            >\n              {genre}\n            </option>\n          ))}\n        </Select>\n      </FormControl>\n      </Grid>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}