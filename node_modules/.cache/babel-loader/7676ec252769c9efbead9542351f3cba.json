{"ast":null,"code":"import*as React from\"react\";import{useTheme}from\"@mui/material/styles\";import OutlinedInput from\"@mui/material/OutlinedInput\";import InputLabel from\"@mui/material/InputLabel\";import MenuItem from\"@mui/material/MenuItem\";import FormControl from\"@mui/material/FormControl\";import Select from\"@mui/material/Select\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ITEM_HEIGHT=48;var ITEM_PADDING_TOP=8;var MenuProps={PaperProps:{style:{maxHeight:ITEM_HEIGHT*4.5+ITEM_PADDING_TOP,width:250}}};var languages=[\"English\",\"French\",\"German\",\"Spanish\",\"Japanese\",\"Portugese\",\"Russian\",\"Mandarin\",\"Korean\",\"Czech\",\"Dutch\",\"Swedish\",\"Hindi\"];function getStyles(language,languagename,theme){return{fontWeight:languagename.indexOf(language)===-1?theme.typography.fontWeightRegular:theme.typography.fontWeightMedium};}export default function LanguageSelect(props){var theme=useTheme();var handleChange=function handleChange(event){var value=event.target.value;props.setLanguageName(// On autofill we get a stringified value.\ntypeof value===\"string\"?value.split(\",\"):value);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(FormControl,{sx:{m:1,width:200},children:[/*#__PURE__*/_jsx(InputLabel,{id:\"genre-select-label\",children:\"Language\"}),/*#__PURE__*/_jsx(Select,{labelId:\"genre-select-label\",id:\"genre-select\",multiple:true,value:props.languageName,onChange:handleChange,input:/*#__PURE__*/_jsx(OutlinedInput,{label:\"Language\"}),MenuProps:MenuProps,children:languages.map(function(language){return/*#__PURE__*/_jsx(MenuItem,{value:language,style:getStyles(language,props.languageName,theme),children:language},language);})})]})});}","map":{"version":3,"sources":["/home/lgentle/repos/CSCapstoneProject/react/cscapstone/src/components/SideMenu/LanguageSelect.js"],"names":["React","useTheme","OutlinedInput","InputLabel","MenuItem","FormControl","Select","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","languages","getStyles","language","languagename","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","LanguageSelect","props","handleChange","event","value","target","setLanguageName","split","m","languageName","map"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,EAApB,CACA,GAAMC,CAAAA,gBAAgB,CAAG,CAAzB,CACA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,UAAU,CAAE,CACVC,KAAK,CAAE,CACLC,SAAS,CAAEL,WAAW,CAAG,GAAd,CAAoBC,gBAD1B,CAELK,KAAK,CAAE,GAFF,CADG,CADI,CAAlB,CASA,GAAMC,CAAAA,SAAS,CAAG,CAChB,SADgB,CAEhB,QAFgB,CAGhB,QAHgB,CAIhB,SAJgB,CAKhB,UALgB,CAMhB,WANgB,CAOhB,SAPgB,CAQhB,UARgB,CAShB,QATgB,CAUhB,OAVgB,CAWhB,OAXgB,CAYhB,SAZgB,CAahB,OAbgB,CAAlB,CAgBA,QAASC,CAAAA,SAAT,CAAmBC,QAAnB,CAA6BC,YAA7B,CAA2CC,KAA3C,CAAkD,CAChD,MAAO,CACLC,UAAU,CACRF,YAAY,CAACG,OAAb,CAAqBJ,QAArB,IAAmC,CAAC,CAApC,CACIE,KAAK,CAACG,UAAN,CAAiBC,iBADrB,CAEIJ,KAAK,CAACG,UAAN,CAAiBE,gBAJlB,CAAP,CAMD,CAED,cAAe,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC5C,GAAMP,CAAAA,KAAK,CAAGjB,QAAQ,EAAtB,CAEA,GAAMyB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,GACYC,CAAAA,KADZ,CAEID,KAFJ,CACEE,MADF,CACYD,KADZ,CAGAH,KAAK,CAACK,eAAN,CACE;AACA,MAAOF,CAAAA,KAAP,GAAiB,QAAjB,CAA4BA,KAAK,CAACG,KAAN,CAAY,GAAZ,CAA5B,CAA+CH,KAFjD,EAID,CARD,CAUA,mBACE,kCACE,MAAC,WAAD,EAAa,EAAE,CAAE,CAAEI,CAAC,CAAE,CAAL,CAAQnB,KAAK,CAAE,GAAf,CAAjB,wBACE,KAAC,UAAD,EAAY,EAAE,CAAC,oBAAf,sBADF,cAEE,KAAC,MAAD,EACE,OAAO,CAAC,oBADV,CAEE,EAAE,CAAC,cAFL,CAGE,QAAQ,KAHV,CAIE,KAAK,CAAEY,KAAK,CAACQ,YAJf,CAKE,QAAQ,CAAEP,YALZ,CAME,KAAK,cAAE,KAAC,aAAD,EAAe,KAAK,CAAC,UAArB,EANT,CAOE,SAAS,CAAEjB,SAPb,UASGK,SAAS,CAACoB,GAAV,CAAc,SAAClB,QAAD,qBACb,KAAC,QAAD,EAEE,KAAK,CAAEA,QAFT,CAGE,KAAK,CAAED,SAAS,CAACC,QAAD,CAAWS,KAAK,CAACQ,YAAjB,CAA+Bf,KAA/B,CAHlB,UAKGF,QALH,EACOA,QADP,CADa,EAAd,CATH,EAFF,GADF,EADF,CA0BD","sourcesContent":["import * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst languages = [\n  \"English\",\n  \"French\",\n  \"German\",\n  \"Spanish\",\n  \"Japanese\",\n  \"Portugese\",\n  \"Russian\",\n  \"Mandarin\",\n  \"Korean\",\n  \"Czech\",\n  \"Dutch\",\n  \"Swedish\",\n  \"Hindi\",\n];\n\nfunction getStyles(language, languagename, theme) {\n  return {\n    fontWeight:\n      languagename.indexOf(language) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function LanguageSelect(props) {\n  const theme = useTheme();\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    props.setLanguageName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 200 }}>\n        <InputLabel id=\"genre-select-label\">Language</InputLabel>\n        <Select\n          labelId=\"genre-select-label\"\n          id=\"genre-select\"\n          multiple\n          value={props.languageName}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Language\" />}\n          MenuProps={MenuProps}\n        >\n          {languages.map((language) => (\n            <MenuItem\n              key={language}\n              value={language}\n              style={getStyles(language, props.languageName, theme)}\n            >\n              {language}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}