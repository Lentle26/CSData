{"ast":null,"code":"var _jsxFileName = \"/home/lgentle/repos/CSCapstoneProject/react/cscapstone/src/components/MovieDetail/Movie.js\",\n    _s = $RefreshSig$();\n\n//import logo from \"./logo.svg\";\nimport * as React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport TopBar from \"./TopBar\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport MovieDetail from \"./MovieDetail\";\nimport { styled } from \"@mui/material/styles\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { defaultMovie } from \"./DefaultMovie\";\nimport LoadPage from \"../LoadPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  };\n});\nconst Offset = styled(\"div\")(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.mixins.toolbar;\n});\n_c = Offset;\nexport default function Movie(props) {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MovieQuery, {\n      id: id,\n      user: props.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movie, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c2 = Movie;\n\nclass MovieQuery extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movie: defaultMovie,\n      credit: {\n        cast: [],\n        crew: []\n      },\n      loading: true,\n      streaming: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/allMovie/\" + this.props.id).then(res => {\n      const movie = res[\"data\"][\"results\"];\n      console.log(movie);\n      this.setState(movie);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"main\",\n          sx: {\n            flexGrow: 1,\n            paddingLeft: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Offset, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadPage, {\n            open: this.state.movie == defaultMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MovieDetail, {\n            id: this.props.id,\n            movie: this.state.movie,\n            credit: this.state.credit,\n            streaming: this.state.streaming,\n            user: this.props.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Offset\");\n$RefreshReg$(_c2, \"Movie\");","map":{"version":3,"sources":["/home/lgentle/repos/CSCapstoneProject/react/cscapstone/src/components/MovieDetail/Movie.js"],"names":["React","Container","TopBar","Box","Paper","MovieDetail","styled","useParams","axios","defaultMovie","LoadPage","Item","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","Offset","mixins","toolbar","Movie","props","id","user","MovieQuery","Component","state","movie","credit","cast","crew","loading","streaming","componentDidMount","get","then","res","console","log","setState","render","flexGrow","paddingLeft"],"mappings":"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","sourcesContent":["//import logo from \"./logo.svg\";\nimport * as React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport TopBar from \"./TopBar\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport MovieDetail from \"./MovieDetail\";\nimport { styled } from \"@mui/material/styles\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { defaultMovie } from \"./DefaultMovie\";\nimport LoadPage from \"../LoadPage\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nconst Offset = styled(\"div\")(({ theme }) => theme.mixins.toolbar);\n\nexport default function Movie(props) {\n  let { id } = useParams();\n  return (\n    <div>\n      <MovieQuery id={id} user={props.user} />\n    </div>\n  );\n}\n\nclass MovieQuery extends React.Component {\n  state = {\n    movie: defaultMovie,\n    credit: { cast: [], crew: [] },\n    loading: true,\n    streaming: [],\n  };\n  componentDidMount() {\n    axios.get(\"/allMovie/\" + this.props.id).then((res) => {\n      const movie = res[\"data\"][\"results\"];\n      console.log(movie);\n      this.setState(movie);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Container maxWidth=\"xl\">\n          <Box component=\"main\" sx={{ flexGrow: 1, paddingLeft: 8 }}>\n            <TopBar />\n            <Offset />\n\n            <LoadPage open={this.state.movie == defaultMovie} />\n            <MovieDetail\n              id={this.props.id}\n              movie={this.state.movie}\n              credit={this.state.credit}\n              streaming={this.state.streaming}\n              user={this.props.user}\n            />\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}